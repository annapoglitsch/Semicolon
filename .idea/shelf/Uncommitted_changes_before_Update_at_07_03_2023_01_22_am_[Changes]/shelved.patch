Index: src/main/java/com/example/Semicolon/HomeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Semicolon;\r\n\r\nimport com.example.Semicolon.Back.Movie;\r\nimport com.example.Semicolon.Back.MovieCard;\r\nimport javafx.animation.TranslateTransition;\r\nimport javafx.collections.*;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.Event;\r\nimport javafx.fxml.*;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport java.util.*;\r\n\r\npublic class HomeController implements Initializable {\r\n    @FXML\r\n    GridPane HomeGrid, menu;\r\n    @FXML\r\n    Button Test, searchButton;\r\n    @FXML\r\n    ChoiceBox<String> genresChoice;\r\n    @FXML\r\n    ChoiceBox<String> sortingChoice;\r\n    @FXML\r\n    TextField searchField;\r\n    @FXML\r\n    ListView movieDisplay;\r\n\r\n    private Movie movie = new Movie();\r\n    private List<Movie> originalMovieList = movie.initializeMovies(), tempSortedMovieList = new ArrayList<>();\r\n    private boolean menuActive = false, started = false, sortedByGenre = false;\r\n    private ObservableList<Movie> movieList = FXCollections.observableArrayList();\r\n    private List<Movie> tempList;\r\n    private ObservableList<String> genres = FXCollections.observableList(Arrays.asList(\"---All GENRES---\", \"ACTION\", \"ADVENTURE\", \"ANIMATION\", \"BIOGRAPHY\", \"COMEDY\",\r\n            \"CRIME\", \"DRAMA\", \"DOCUMENTARY\", \"FAMILY\", \"FANTASY\", \"HISTORY\", \"HORROR\",\r\n            \"MUSICAL\", \"MYSTERY\", \"ROMANCE\", \"SCIENCE_FICTION\", \"SPORT\", \"THRILLER\", \"WAR\",\r\n            \"WESTERN\"));\r\n    private ObservableList<String> sortingKeywords = FXCollections.observableList(Arrays.asList(\"---NO SORTING---\", \"A-Z\", \"Z-A\"));\r\n    private String searchWord = \"\";\r\n\r\n    @FXML\r\n    private void activateMenu() {\r\n        TranslateTransition tt = new TranslateTransition();\r\n        tt.setNode(menu);\r\n        tt.setDuration(Duration.millis(500));\r\n        if (menuActive) {\r\n            tt.setFromY(menu.getHeight());\r\n            tt.setToY(0);\r\n            menu.setDisable(true);\r\n            menuActive = false;\r\n        } else {\r\n            tt.setFromY(0);\r\n            tt.setToY(menu.getHeight());\r\n            menu.setDisable(false);\r\n            menuActive = true;\r\n        }\r\n        tt.play();\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        if (!started) {\r\n            movieList.addAll(originalMovieList);\r\n            tempSortedMovieList.addAll(originalMovieList);\r\n            movieDisplay.setItems(movieList);\r\n            movieDisplay.setCellFactory(movieDisplay -> new MovieCard());\r\n            started = true;\r\n        }\r\n        genresChoice.setItems(genres);\r\n        genresChoice.setValue(\"---All GENRES---\");\r\n        sortingChoice.setItems(sortingKeywords);\r\n        sortingChoice.setValue(\"---NO SORTING---\");\r\n        sortingChoice.setOnAction(this::sortMoviesByTitle);\r\n        genresChoice.setOnAction(this::sortMoviesByGenre);\r\n    }\r\n\r\n    private ObservableList<Movie> sortMoviesByTitle(Event event) {\r\n        tempSortedMovieList.clear();\r\n        if (sortingChoice.getValue().equals(\"A-Z\")) {\r\n            Collections.sort(movieList, new Comparator<Movie>() {\r\n                @Override\r\n                public int compare(Movie o1, Movie o2) {\r\n                    return o1.title.compareTo(o2.title);\r\n                }\r\n            });\r\n            tempSortedMovieList.addAll(originalMovieList);\r\n            System.out.println(tempSortedMovieList.size());\r\n            return movieList;\r\n        } else if (sortingChoice.getValue().equals(\"Z-A\")) {\r\n            Collections.sort(movieList, new Comparator<Movie>() {\r\n                @Override\r\n                public int compare(Movie o1, Movie o2) {\r\n                    return o2.title.compareTo(o1.title);\r\n                }\r\n            });\r\n            tempSortedMovieList.addAll(originalMovieList);\r\n            System.out.println(tempSortedMovieList.size());\r\n            return movieList;\r\n        } else if (sortingChoice.getValue().equals(\"---NO SORTING---\")) {\r\n            if (!sortedByGenre) {\r\n                movieList.clear();\r\n                movieList.addAll(originalMovieList);\r\n            }\r\n            tempSortedMovieList.addAll(originalMovieList);\r\n            System.out.println(tempSortedMovieList.size());\r\n            return movieList;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private ObservableList<Movie> sortMoviesByGenre(Event event) {\r\n        ObservableList<Movie> tempList = FXCollections.observableArrayList();\r\n        movieList.clear();\r\n        movieList.addAll(tempSortedMovieList);\r\n        if (!genresChoice.getValue().equals(\"---All GENRES---\")) {\r\n            sortedByGenre = true;\r\n            for (int j = 0; j < movieList.size(); j++) {\r\n                for (int i = 0; i < movieList.get(j).genres.length; i++) {\r\n                    if (genresChoice.getValue().equals(movieList.get(j).genres[i])) {\r\n                        tempList.add(movieList.get(j));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            movieList.clear();\r\n            movieList.addAll(tempList);\r\n        } else {\r\n            sortedByGenre = false;\r\n        }\r\n        return movieList;\r\n    }\r\n\r\n    @FXML\r\n    private ObservableList<Movie> searchMovie(ActionEvent event) {\r\n        movieList.clear();\r\n        for (int i = 0; i < originalMovieList.size(); i++) {\r\n            if (originalMovieList.get(i).description.contains(searchField.getText()) ||\r\n                    originalMovieList.get(i).title.contains(searchField.getText())) {\r\n                movieList.add(originalMovieList.get(i));\r\n            }\r\n        }\r\n        return movieList;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Semicolon/HomeController.java b/src/main/java/com/example/Semicolon/HomeController.java
--- a/src/main/java/com/example/Semicolon/HomeController.java	(revision b6a385b1588f5812f0f99dda61127a22f821c07a)
+++ b/src/main/java/com/example/Semicolon/HomeController.java	(date 1678148528024)
@@ -134,7 +134,7 @@
     }
 
     @FXML
-    private ObservableList<Movie> searchMovie(ActionEvent event) {
+    private ObservableList<Movie> searchMovie() {
         movieList.clear();
         for (int i = 0; i < originalMovieList.size(); i++) {
             if (originalMovieList.get(i).description.contains(searchField.getText()) ||
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"632c3f87-378d-459f-993b-b51a9090f282\" name=\"Changes\" comment=\"Moritz - can come back to original list\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Semicolon/HomeController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Semicolon/HomeController.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"LOCAL\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"main\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MTS9OnWH3J9sJFu0Q4wx3LULS4\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-17&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.23242188&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.37834394&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"com.example.Semicolon\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.FhmdbApplication\">\r\n    <configuration name=\"FhmdbApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.Semicolon.FhmdbApplication\" />\r\n      <module name=\"Semicolon\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.Semicolon.Back.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.Semicolon.HelloApplication\" />\r\n      <module name=\"Semicolon\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.Semicolon.Back.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.Semicolon.Back.test\" />\r\n      <module name=\"Semicolon\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.Semicolon.Back.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"webScraper\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.Semicolon.Back.webScraper\" />\r\n      <module name=\"Semicolon\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.Semicolon.Back.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.FhmdbApplication\" />\r\n        <item itemvalue=\"Application.test\" />\r\n        <item itemvalue=\"Application.webScraper\" />\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"632c3f87-378d-459f-993b-b51a9090f282\" name=\"Changes\" comment=\"\" />\r\n      <created>1677789926911</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1677789926911</updated>\r\n      <workItem from=\"1677789928233\" duration=\"354000\" />\r\n      <workItem from=\"1677790285601\" duration=\"9080000\" />\r\n      <workItem from=\"1677865967266\" duration=\"5361000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Moritz - rough draft of main page, added Movie Objects\">\r\n      <created>1677798635847</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1677798635847</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Moritz - added MovieCards\">\r\n      <created>1677872083019</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1677872083019</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"HEAD\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"User\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"*\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Moritz - rough draft of main page, added Movie Objects\" />\r\n    <MESSAGE value=\"Moritz - added MovieCards\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Moritz - added MovieCards\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b6a385b1588f5812f0f99dda61127a22f821c07a)
+++ b/.idea/workspace.xml	(date 1678148510250)
@@ -4,9 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="632c3f87-378d-459f-993b-b51a9090f282" name="Changes" comment="Moritz - can come back to original list">
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Semicolon/HomeController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Semicolon/HomeController.java" afterDir="false" />
-    </list>
+    <list default="true" id="632c3f87-378d-459f-993b-b51a9090f282" name="Changes" comment="Moritz - can come back to original list" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
